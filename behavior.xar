<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="AcandoWR/GameRunning" type="0" type_size="1" nature="4" stm_value_name="AcandoWR/GameRunning" inner="1" tooltip="AcandoWR/GameRunning desc" id="4" /><Input name="PeoplePerception/JustArrived" type="0" type_size="1" nature="4" stm_value_name="PeoplePerception/JustArrived" inner="1" tooltip="PeoplePerception/JustArrived desc" id="5" /><Input name="GazeAnalysis/PeopleLookingAtRobot" type="0" type_size="1" nature="4" stm_value_name="GazeAnalysis/PeopleLookingAtRobot" inner="1" tooltip="GazeAnalysis/PeopleLookingAtRobot desc" id="6" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="7" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="100"><Box name="start service" id="1" localization="8" tooltip="" x="344" y="91"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    script_id = "acando_remote_service"
    def onLoad(self):
        self.listener_id = None
        self.script_manager = self.session().service("ALServiceManager")
        self.script_id = self.packageUid() + "." + self.script_id

    def disconnect(self):
        try:
            self.script_manager.serviceStopped.disconnect(self.listener_id)
        except Exception as e:
            pass

    def onUnload(self):
        self.script_manager.stopService(self.script_id)
        self.disconnect()

    def onInput_onStart(self):
        self.listener_id = self.script_manager.serviceStopped.connect(self.onScriptStopped)
        if not self.script_manager.startService(self.script_id):
            self.log("Failed to start App Script %s, stopping." % repr(self.script_id))
            self.onStopped()
            self.disconnect()

    def onScriptStopped(self, script_name, reason):
        if script_name == self.script_id:
            self.log("App Script Stopped: " + self.script_id)
            self.onStopped()
            self.disconnect()

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>